<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.scau.kevin.supermarket.dao.MemberDao" >
  <resultMap id="BaseResultMap" type="com.scau.kevin.supermarket.entity.Member" >
    <id column="member_id" property="memberId" jdbcType="BIGINT" />
    <result column="member_account" property="memberAccount" jdbcType="BIGINT" />
    <result column="member_name" property="memberName" jdbcType="VARCHAR" />
    <result column="member_phone" property="memberPhone" jdbcType="BIGINT" />
    <result column="member_sex" property="memberSex" jdbcType="TINYINT" />
    <result column="member_description" property="memberDescription" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    member_id, member_account, member_name, member_phone, member_sex, member_description
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from member
    where member_id = #{memberId,jdbcType=BIGINT}
  </select>
  <select id="listMembers" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from member
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from member
    where member_id = #{memberId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.scau.kevin.supermarket.entity.Member" >
    insert into member (member_id, member_account, member_name, 
      member_phone, member_sex, member_description
      )
    values (#{memberId,jdbcType=BIGINT}, #{memberAccount,jdbcType=BIGINT}, #{memberName,jdbcType=VARCHAR}, 
      #{memberPhone,jdbcType=BIGINT}, #{memberSex,jdbcType=TINYINT}, #{memberDescription,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.scau.kevin.supermarket.entity.Member" >
    insert into member
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="memberId != null" >
        member_id,
      </if>
      <if test="memberAccount != null" >
        member_account,
      </if>
      <if test="memberName != null" >
        member_name,
      </if>
      <if test="memberPhone != null" >
        member_phone,
      </if>
      <if test="memberSex != null" >
        member_sex,
      </if>
      <if test="memberDescription != null" >
        member_description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="memberId != null" >
        #{memberId,jdbcType=BIGINT},
      </if>
      <if test="memberAccount != null" >
        #{memberAccount,jdbcType=BIGINT},
      </if>
      <if test="memberName != null" >
        #{memberName,jdbcType=VARCHAR},
      </if>
      <if test="memberPhone != null" >
        #{memberPhone,jdbcType=BIGINT},
      </if>
      <if test="memberSex != null" >
        #{memberSex,jdbcType=TINYINT},
      </if>
      <if test="memberDescription != null" >
        #{memberDescription,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.scau.kevin.supermarket.entity.Member" >
    update member
    <set >
      <if test="memberAccount != null" >
        member_account = #{memberAccount,jdbcType=BIGINT},
      </if>
      <if test="memberName != null" >
        member_name = #{memberName,jdbcType=VARCHAR},
      </if>
      <if test="memberPhone != null" >
        member_phone = #{memberPhone,jdbcType=BIGINT},
      </if>
      <if test="memberSex != null" >
        member_sex = #{memberSex,jdbcType=TINYINT},
      </if>
      <if test="memberDescription != null" >
        member_description = #{memberDescription,jdbcType=VARCHAR},
      </if>
    </set>
    where member_id = #{memberId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.scau.kevin.supermarket.entity.Member" >
    update member
    set member_account = #{memberAccount,jdbcType=BIGINT},
      member_name = #{memberName,jdbcType=VARCHAR},
      member_phone = #{memberPhone,jdbcType=BIGINT},
      member_sex = #{memberSex,jdbcType=TINYINT},
      member_description = #{memberDescription,jdbcType=VARCHAR}
    where member_id = #{memberId,jdbcType=BIGINT}
  </update>
</mapper>